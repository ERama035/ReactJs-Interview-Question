1) type of aws deployment model:
ec2 - provides as virtual servers and spot instances 
lamba - serverless computing ( python based requirements ) common for key rotations , automations, api triggers.
eks - based on kubernates model 
ecs - is also an server less containers using fargate or ec2 based on ecs fargate 
db instances in RDS server: Managed Relational Db with automated backup, patching, scaling


2) difference bet ween Amazon rds vs dynamo db and red shift ?..
Rds : structured data  with vertical scaling .
dynao db : unstructured data with horizantal scaling, used for gaming, IOT, reltime apps
redshift: for ware house product and data analystics with massive parallel processing.

3) what are zones and avilabilty zones vs 
region : a phycisal location like east-1 vs west-2
zones -> individual data centers with multiple avilabilty zones .
avilabilty zones -> 

4) difference between vertical scaling vs horizontal scaling ?..
vertical scaling : Increase power of existing server. t2.micro -> t2.large
horizantal scaling: add more servers/ nodes this is better for high avilabily and distrubuted.

5) what are security groups and network ACLS ?.. 
security groups: applied at instance level , stateful (rembers traffic) , goes traffic to ec2
Network Acls: applied at Subnet level, sateless (ruless must allow both in-bound and out-bound) , and control traffic to subnets.

6) Amazon route 53 ensure high avilability and low latency ?..
Route 53: DNS service routes end-user to aws resources or external servers
high avilability and low latency via location and latency based routing

7) aws lamba ?..
Serverless compute that executes code in response to events (s3 upload, Api gateway call, etc).


8) aws cloud formation ?..
IT is a template for making an infrastructure

9) amazon sqs vs amazon sns ?..
sqs; queue , COnsumer pulls messages , decoupled microservices
sns: pub/sub model , pushes messaages to subscribers , ALerts, fan-out messaging system.

10) Aws - well architected framwork ?..
operational consistency:
security:
Relaibility:
performance Efficency:
Cost Optimization:

11) Elastic ip ?..
Static Public IPv4 address between instances.
maintains consistant IP during the instance replacement

12) aws Elastic Bean Stalk ?..
This service will scale the webapps automatically  handles provision with EC2, load balancer , Autoscaling.


13) amazon vpc -> public subnet vs private subnet ?..
public subnet has direct internet gateway , used for web servers, load balancers
private Subnet has internal connectivity of the apps , userd for Datrabases, Backend Services.

both are connected using the NAT gateway or Nat service, private needs outbounbd internet.

15) amazon direct connect ?..
Used for connecting the data from on-premises to Aws
Provides low latency and higher nandwidth thatn VPN over internet.

16) amazon aurora and amazon rds ?..
amazon aurora ->  provides 2 types of db servers mySql and  PostgresQl  and high scaling upto 64tb , multi-Az, self healing.
RDS-> Manged Traditoinal Dbs, Standard Rds performance , Manual Instance Scaling, Mulit-az optional.

17) amazon Kinesis ?.. real-time data processing ?..
Real-time Data streaming and analytics platform.
collects and process large streams of data (logs, IoT, click streams)
Kinesis data Streams, Firehose Analytics, Video Streams.

18 ) amazon s3 storage class ?..
s3 standard -> frequent access
s3 Intelligent-Tiering -> Auto moves dat between tiers
S3 standard-IA -> infrequent access
s3 one Zone-IA -> Single AZ storage
s3 glacier/ Glacier Deep Archive -> long-term Archival Storage

19) Amazon cloud front?.. used for cdn ?..
Cloud Delivery Network that caches contenct at edge locations globally , which provides low latency and high transfer speed for websites and apps.
20)  Amazon disaster Recover?..
backup & Restore
Pilot Light
Warm StandBy
Multi-Region Active-active : traffic distrubutes accrosss regions , if one fails, another continues the service without down time.

20 ) Amazon Api gateway : Enables you to build secure, scalable and managed Apis that connect clients to backend system -
common uses:
Ideal for serverless and microservices architecture with Microservices Gateway
Rate limited public APIs.
IoT devices communication
Security with amazon Cognito , APi keys or JWT keys (OIDC)
resources: AWS IAM , Amazon Cognito, Api Keys, Custom Authorizer.

common flow: API Gateway handles request → triggers Lambda → stores/retrieves data from DynamoDB → returns response to client.

21) what are Compute Service in aws ?.
Amazon EC2, lambda , ECS, EKS , Aws Elastic Beanstack.

22) amazon cloud front vs CDN ?..


23) which amazon services are used for the streaming services ?..
---------------- Simpler verison ------------------------------------
https://www.linkedin.com/pulse/scenario-based-aws-interview-questions-vikrant-virdi-xpvie/

24) how do you optimize costs for a high-traffic aws application ?..


25) How can you implement serverless authentication in an AWS application ?..

26) batch processing -> lambda or ecs architecture  or aws batch ?..
27) AWS Single Sign-On (SSO) ?..
28) AWS CloudFormation StackSets ?..
29) Aws Database Migration Service (DMS) ?..

31) how elastic ip address work in aws ?..

32 ) You have a microservices application that needs to scale dynamically based on traffic. How would you design an architecture for this using AWS services?
amazon eks or ecs 
33) your application database is experiencing the performance issues , how do you solve ?..
amazon x ray - amazon RDS performance tools 
34) migrating the monlothic to microservice ?..
strangler pattern for migration of  monolithic to micro services

35 ) Your team is frequently encountering configuration drift issues in your infrastructure. How could you prevent and manage this effectively?
I will use aws cloud formation templates or terraform for implementing the Infrastructure as Service.

36 ) Your company is launching a new product, and you expect a sudden spike in traffic. How would you ensure the application remains responsive and available?
I would implement a combination of 
auto-scaling groups, 
Amazon CloudFront for content delivery, 
Amazon RDS read replicas, and 
Amazon DynamoDB provisioned capacity to handle increased load while maintaining performance.

37) Your team wants to ensure secure access to AWS resources for different team members.
I would use AWS Identity and Access Management (IAM) to create fine-grained policies for each team member.
IAM roles and groups can be assigned permissions based on least privilege principles.

38) You're managing a complex microservices architecture with multiple services communicating. How could you monitor and trace requests across services?
 AWS X-Ray into the application to trace requests as they traverse services
 
39) Your application has a front-end hosted on S3, and you need to enable HTTPS for security. How would you achieve this ?..
I would use Amazon CloudFront to distribute content from the S3 bucket, configure a custom domain, and associate an SSL/TLS certificate through AWS Certificate Manager.

40) Your organization has multiple AWS accounts for different environments (dev, staging, prod). How would you manage centralized billing and ensure cost optimization?
I would use AWS Organizations to manage multiple accounts and enable consolidated billing. AWS Cost Explorer and AWS Budgets could be used to monitor and optimize costs across accounts.
 
41) run resource-intensive tasks in the background. How could you ensure efficient and scalable task processing?
I would use AWS Lambda for serverless background processing or AWS Batch for batch processing

42) Your organization wants to enable single sign-on (SSO) for multiple AWS accounts ?..
I would use AWS Single Sign-On (SSO) to manage user access across multiple AWS accounts.

43) Your company is aiming for high availability by deploying applications across multiple regions. How could you implement global traffic distribution?
I would use Amazon Route 53 with Latency-Based Routing or Geolocation Routing to direct traffic to the closest.

44) Your application needs to store and retrieve large amounts of unstructured data. How could you design a cost-effective solution?
I would use Amazon S3 with appropriate storage classes (such as S3 Standard or S3 Intelligent-Tiering) based on data access patterns.
This allows for durable and cost-effective storage of unstructured data.

45) Your team wants to enable automated testing for infrastructure deployments. How could you achieve this?
I would integrate AWS CloudFormation StackSets into the CI/CD pipeline. 
StackSets allow you to deploy infrastructure templates to multiple accounts

46)AWS Lambda functions, and you want to improve cold start performance. How could you address this challenge?
I will implement an Amazon API Gateway with the HTTP proxy integration, creating a warm-up endpoint that periodically invokes Lambda functions to keep them warm.

47) multiple microservices, each with its own database. How could you manage database schema changes efficiently?
I would use AWS Database Migration Service (DMS) to replicate data between the old and new schema versions, allowing for seamless database migrations without 
disrupting application operations.

48) Your organization is concerned about data protection and compliance. How could you ensure sensitive data is securely stored and transmitted?
I would use Amazon S3 server-side encryption and Amazon RDS encryption at rest for data storage and SSL/TLS encryption for communication between services.

